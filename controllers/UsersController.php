<?php
namespace app\controllers;
use Yii;
use app\models\Users;
use app\models\UsersSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\AccessControl;
use yii\filters\VerbFilter;
use app\models\Personnel;
use app\models\Logtable;
/**
 * UsersController implements the CRUD actions for Users model.
 */
class UsersController extends Controller
   {
    /**
     * {@inheritdoc}
     */
public function behaviors()
      {
        return [
          'access'=>[
                'class'=>AccessControl::className(),
                'only'=>['add','create','update','change'],
                'rules'=>[
                    [
                        'allow'=>true,
                        'roles'=>['@'],
                    ],],],
            'verbs'=>[
                'class'=>VerbFilter::className(),
                'actions'=>[
                    'delete'=>['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists all Users models.
     * @return mixed
     */
public function actionIndex()
     {
        $searchModel=new UsersSearch();
        $dataProvider=$searchModel->search(Yii::$app->request->queryParams);
        $dataProvider->sort->defaultOrder=['id'=>SORT_DESC];
        $dataProvider->pagination->pageSize=50;
        return $this->render('index', [
            'searchModel'=>$searchModel,
            'dataProvider'=>$dataProvider,
        ]);
    }
    /**
     * Displays a single Users model.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
public function actionView($id)
       {
        return $this->render('view', [
        'model'=>$this->findModel($id),
        ]);
      }
    /**
     * Creates a new Users model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
public function actionAdd()
        {
        $model=new Users();
   $changepass=Users::find()->where(['email'=>Yii::$app->user->identity->email])->one();
if($model->load(Yii::$app->request->post())){
   $oldpassword=md5($model->oldpassword);
   //print_r($model->newpassword);exit;
if($oldpassword==$changepass->password){
 $changepass->password=md5($model->newpassword);
if($changepass->save()){
     Yii::$app->session->setFlash('success','Password changed.');
        Yii::$app->user->logout();
        return $this->redirect(['site/index6']);        
        }}
else{
    $model->newpassword=NULL;
    $model->oldpassword=NULL;
    $model->confirmpas=NULL;
Yii::$app->getSession()->setFlash('error','Password not changed');
    }}
    return $this->render('add',[
            'model'=>$model,
        ]);
    }
 public function actionCreate()
     {
        $model=new Users();
if($model->load(Yii::$app->request->post())){
$link="https://10.231.19.20/inventory/web/index.php/site/login"."\nor" ."\nhttps://197.156.116.67/inventory";
$link20="https://10.231.19.20/inventory";
$link67="https://web.hararghe.org/inventory";
$to=$model->email;
$subject ="Dear User,\n\n[This message was automatically generated by inventory managment system(IMS)].\n
 IMS account has been created for you in which your IMS username:" .$model->username."  and temporary password is:-".$model->password."  To get access click link below and you will see change password option on the left side menu 
 then click that option to change your password.\nPlease note that the password is case-sensitive  \n".$link." \n\nWarm regards, 
CHAMPS ETHIOPIA IT Team";
$headers = "MIME-Version: 1.0\r\n";
$headers .= "Content-type: text/html; charset=iso-8859-1\r\n";
$headers .= "X-Priority: 3\r\n";
$headers .= "X-Mailer: PHP". phpversion() ."\r\n";
$headers .= "Reply-To: ".$model->fname." <{$model->email}>\r\n"; 
$headers .= "Return-Path: ".$model->fname." <{$model->email}>\r\n";
$headers .= "From: ".$model->fname." <{$model->email}>\r\n";
$body ="<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head><meta http-equiv='Content-Type' content='text/html; charset=utf-8' />
</head><body><div style='width:700px; height:100% auto; border:3px solid #088ef6; border-radius:5px; padding:10px'>
<table width='700' border='0' cellspacing='0' cellpadding='0'>
<tr><td><div style='padding:10px'><div style='font-size:14px'><div align='left' style='color:#d50000;   font-weight:bold; font-family:Arial, Helvetica, sans-serif'>Hi ".$model->fname.",</div> <br /><div align='left' style='font-family:Arial, Helvetica, sans-serif'>Received Contact Message from 
".Yii::$app->user->identity->fname.", <br /> 
I am writing to inform you that your account has been successfully created. You can now use this account to log in and update your password.
.<br/>
            Usernae: ".$model->username.".<br /> 
            Password: ".$model->password.".<br /> 
            Click link below.<br/> 
            "."</tr><tr><td>"."<a href='".$link20."' target='_blank'>"."inventory at office"."</a>"." to access anywhere click "."<a href='".$link67."' target='_blank'>"."inventory any where"."</a><br/><br/>"." Warm regards,<br/> 
            CHAMPS ETHIOPIA IT Team"."</td></tr></div></div>
</html>";
$subjects="Username and password-[This message was automatically generated by inventory managment system(IMS)]";
$model->sendHHRMail($to,$subjects,$body);
$model->password=md5($model->password);
if($model->Type=="Admin"){
    $model->active=1;
     }
if($model->Type=="Microlab"){
    $model->active=2;
     }
if($model->Type=="Clinical"){
    $model->active=3;
     }
if($model->Type=="Pathology"){
    $model->active=4;
     }
if($model->Type=="IT"){
  $model->active=5;
     }
if($model->Type=="SBS"){
    $model->active=6;
     }
if($model->Type=="KHDSS"){
    $model->active=7;
     }
if($model->role=="Linemanager"){
    $model->active=8;
     }
if($model->Type=="PSU"){
    $model->active=9;
     }
if($model->Type=="PI"){
    $model->active=10;
     }
   if($model->save()){
Yii::$app->getSession()->setFlash('success','Account has been created');
    return $this->redirect(['view', 'id' =>$model->id]);
        }}
return $this->render('create',[
            'model'=>$model,

        ]);
    }
//sign up
public function actionSignup($fname,$mname,$lname,$username,$password,$assign)
    {
        $model = new Users();
        $model->fname=$fname;
        $model->mname=$mname;
        $model->lname=$lname;
        $model->username=$username;
        $model->password=$password;
        $model->Type=$assign;
        $model->assign=$assign;
if($model->load(Yii::$app->request->post())){
$var_data=Personnel::find()->where(['firstname'=>$fname])->andWhere(['lastname'=>$lname])->one();
     $model->personnelid=$var_data->personnelid;
     $model->password= md5($model->password);
if($model->Type=="Admin"){
    $model->active=1;
     }
if($model->Type=="Microlab"){
   $model->active=2;
     }
if($model->Type=="Clinical"){
    $model->active=3;
     }
if($model->Type=="Pathology"){
    $model->active=4;
     }
if($model->Type=="IT"){
    $model->active=5;
     }
if($model->Type=="SBS"){
    $model->active=6;
     }
if($model->Type=="KHDSS"){
    $model->active=7;
     }
if($model->Type=="Linemanager"){
    $model->active=8;
    } 

if($model->Type=="PSU"){
    $model->active=9;
     }
}
if($model->save()){
     \Yii::$app->session->setFlash('success','successful');
    return $this->redirect(['login']);
            }
    return $this->redirect(['login']);

    }
public function actionUpdate($id)
    {
        $model=$this->findModel($id);
        $ch=Users::find()->where(['id'=>$id])->one();
if($model->load(Yii::$app->request->post())){
    if($ch->password!=$model->password){
     $model->password= md5($model->password);
         }
   else{
       $model->password=$ch->password;
   }
if($model->Type=="Admin") { 
    $model->active=1;
              } 
if($model->Type=="Microlab"){  
    $model->active=2;
                }
if($model->Type=="Clinical"){  
    $model->active=3;
                }
if($model->Type=="Pathology"){  
        $model->active=4;
                }
if($model->Type=="IT"){  
  $model->active=5;
                }
if($model->Type=="SBS"){  
    $model->active=6;
                }
if($model->Type=="Personnel"){
        $model->active=0;
     }
if($model->Type=="KHDSS"){
        $model->active=7;
     }
if($model->Type=="Linemanager"){
     $model->active=8;
     }
if($model->Type=="PSU"){
    $model->active=9;
     }
    if($model->save()){
            return $this->redirect(['view','id'=>$model->id]);
        }}
return $this->render('create',[
            'model'=>$model,
        ]);
    }

    /**
     * Deletes an existing Users model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }
protected function findModel($id)
    {
        if (($model=Users::findOne($id))!==null) {
            return $model;
        }
        throw new NotFoundHttpException('The requested page does not exist.');
    }
public function actionAssignrole($username,$lnm_email){
        $model=Users::find()->where(['username'=>$username])->one();
        $model->lnm_email=$lnm_email;
        //$model->assign="Linemanager";
        $logs=new Logtable();
        $logs->fullname=Yii::$app->user->identity->fname." ".Yii::$app->user->identity->mname." ".Yii::$app->user->identity->lname;
        $logs->action="Assign role";
        $logs->dateentered=date("Y-m-d H:i:s");
    if($model->save(false)){
        $logs->save();
    \Yii::$app->session->setFlash('success', 'You have been successfully assigend'.$model->fname);
    return $this->redirect(['users/index','id'=>$model->id]);
            }
         \Yii::$app->session->setFlash('error','Role Assignment fail');
     return $this->redirect(['index','id'=>$model->id]);
    }
}
